// 2493. 옥상 정원 꾸미기 -> 골드 5

#include <bits/stdc++.h>

using namespace std;

void func1(void) {
  int n;
  cin >> n;

  stack<long long> st; // h 최대가 큼
  long long h; // 최대 1000000000
  long long ans=0; // 최대 80000! ?? 79999! ??
  while (n--) {
    cin >> h;
    while (!st.empty() && st.top() <= h)  st.pop(); 
    ans += st.size(); 
    st.push(h);
    /*
    10 이고 다음 건물이 3, 볼 수 있음, 스택에는 10 있음
    볼 수 있는 건물 수 하나 추가
    push(3)
    
    7 은 3보다 큼, 3은 볼 수 없으므로 pop, 10은 볼 수 있음
    볼 수 있는 건물 수 하나 추가
    push(7)

    4는 7보다 작음, 따라서 7이 볼 수 있으니 10도 볼 수 있음
    볼 수 있는 건물 수 2개 추가
    push(4)

    12는 스택에 있는 모든 건물보다 큼. 따라서 볼 수 있는 건물 없이 모두 pop
    push(12)

    2는 12보다 작음. 따라서 볼 수 있음.
    볼 수 있는 건물 수 하나 추가

    총 5가 된다.

    즉, 스택에 있는 건물이, 입력되는 건물보다 작아서 볼 수 있는 지를 판단.
    h 높이의 건물을 스택에 있는 건물이 볼 수 있는가를 판단하는 것, 따라서 스택에 있는 건물은 내림차순으로 들어오므로 top에 있는 건물이 h의 건물을 볼 수 있으면
    스택에 있는 모든 건물이 h의 건물을 볼 수 있는 것. 그래서 h의 건물을 못보는 것들은 그냥 제거해서, h의 건물을 볼 수 있는 것들만 냄겨두고, 해당 건물은 이만큼의 건물이 볼 수 있습니다를 스택의 크기를 이용하여 본 것
    */
  }

  cout << ans;
}

int main(void)
{
  ios::sync_with_stdio(0);
  cin.tie(0);
  func1();
  return 0;
}